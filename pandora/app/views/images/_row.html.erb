<% collection = nil unless local_assigns.has_key?(:collection) %>
<% search = nil unless local_assigns.has_key?(:search) %>
<% icons = true unless local_assigns.has_key?(:icons) %>
<% secondary_icons = true unless local_assigns.has_key?(:secondary_icons) %>

<div
  class="list_row <%= cycle('odd', 'even') %> undim"
  data-upload-id="<%= super_image.upload? ? super_image.upload.id : '-1' %>"
>
  <% if icons %>
    <%= render partial: 'shared/image/icons', locals: {
      super_image: super_image,
      list: true
    } %>
  <% end %>
  <div class="image_wrap">
    <div class="image">
      <%= link_to_image_tag(super_image) %>
    </div>

    <div class="dim">
      <%= render partial: 'ratings/show', locals: {super_image: super_image, light: true} %>
    </div>

    <% if super_image.comment_count > 0 %>
      <div class="dim">
        <%= link_to controller: 'images', action: 'show', id: super_image.pid, anchor: 'comments' do %>
          <%= super_image.comment_count%>
          <%= super_image.comment_count == 1 ? 'comment'.t : 'comments'.t %>
        <% end %>
      </div>
    <% else %>
      <div class="dim comment-div-empty"></div>
    <% end %>

    <div class="dim gallery-sort-value">
      <% if super_image.no_longer_available? %>
        <%= 'This record is no longer available'.t %>
      <% else %>
        <% if sort_column.blank? %>
          <% # do nothing %>
        <% elsif collection && sort_column == 'insertion_order' %>
          <% if time = super_image.inserted_at(collection) %>
            <%= l time, format: :long %>
          <% end %>
        <% elsif sort_column == 'credits' %>
          <%= render partial: 'shared/rights_work', locals: {rights_work: super_image.rights_work} %>
        <% elsif super_image.send(sort_column).is_a?(Time) %>
          <%= l super_image.send(sort_column), format: :long %>
        <% else %>
          <%= truncate(super_image.send(sort_column).to_s, length: 40) %>
        <% end %>
      <% end %>
    </div>
  </div>

  <% if secondary_icons %>
    <% if collection %>
      <% if current_user.allowed?(collection, :write) %>
        <div class="icons dim">
          <div class="upload-icon-div">
            <%= link_to(
              image_tag('icon/delete.gif', class: 'icon delete-icon'),
              {controller: 'collections', action: 'remove', image: super_image.pid},
              title: 'Delete image from collection'.t,
              data: {confirm: 'Are you sure?'.t},
              method: 'post'
            ) %>
          </div>
        </div>
      <% end %>
    <% else %>
      <% if super_image.upload? %>
        <div class="icons dim">
          <div>
            <%= link_to(
              image_tag('icon/delete.gif', class: 'icon upload-icon delete-icon upload-delete-icon'),
              {controller: 'uploads', action: 'destroy', id: super_image.upload.id},
              title: 'Delete image from database'.t,
              method: 'delete',
              data: {confirm: 'Are you sure?'.t}
            ) %>
          </div>
          <div>
            <%= link_to(image_tag('icon/edit.gif', class: "icon upload-icon upload-edit-icon"),
              {controller: 'uploads', action: 'edit', id: super_image.upload.id},
              title: 'Edit upload'.t
            ) %>
          </div>

          <div class="upload-icon-div">
            <% if super_image.upload.approved_record %>
              <%= image_tag(
                'misc/access_status_readable.gif',
                class: "upload-approval-icon",
                title: 'This image of your database has been approved by the prometheus office.'.t
              ) %>
            <% else %>
              <%= image_tag(
                'misc/access_status_private.gif',
                class: "upload-approval-icon",
                title: 'This image of your database is not available to public collections until approval of the prometheus office.'.t
              ) %>
            <% end %>
          </div>
        </div>
      <% end %>
    <% end %>
  <% end %>

  <%= render partial: 'images/metadata', locals: {
    artists: Array.wrap(super_image.artist),
    titles: Array.wrap(super_image.title),
    locations: Array.wrap(super_image.location),
    date: super_image.date || "",
    credits: Array.wrap(super_image.credits),
    rights_work: Array.wrap(super_image.rights_work),
    rights_reproduction: Array.wrap(super_image.rights_reproduction),
    source: super_image.source,
    record_id: super_image.pid,
    record_object_id: Array.wrap(super_image.record_object_id),
    aspects: (
      search ?
        search.aspects_for(super_image.pid, Array.wrap(super_image.record_object_id).first) :
        nil
    ),
    hit: super_image.elastic_record,
    is_upload: super_image.upload?,
    associated: super_image.associated(current_user),
    parent: super_image.parent,
    super_image: super_image
  } %>
</div>
